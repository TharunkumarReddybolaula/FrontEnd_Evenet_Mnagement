{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class EventService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = 'http://localhost:5070/api/Admin'; // Correct API Base URL\n  }\n  // Fetch all events from the backend\n  getEvents() {\n    return this.http.get(`${this.apiUrl}/Event/View`);\n  }\n  static {\n    this.ɵfac = function EventService_Factory(t) {\n      return new (t || EventService)(i0.ɵɵinject(i1.HttpClient));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: EventService,\n      factory: EventService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["EventService","constructor","http","apiUrl","getEvents","get","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\Users\\labuser\\source\\repos\\project\\auth\\src\\app\\services copy\\event.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\n// Define the Event model interface\r\nexport interface Event {\r\n  eventId?: number;\r\n  courseTitle: string;\r\n  topicId: number;\r\n  locationId: number;\r\n  speakerId: number;\r\n  classSize: number;\r\n  numberOfDays: number;\r\n  startDate: string;\r\n  endDate: string;\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class EventService {\r\n  private apiUrl = 'http://localhost:5070/api/Admin'; // Correct API Base URL\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  // Fetch all events from the backend\r\n  getEvents(): Observable<Event[]> {\r\n    return this.http.get<Event[]>(`${this.apiUrl}/Event/View`);\r\n  }\r\n\r\n  // Add more methods if necessary (addEvent, updateEvent, etc.)\r\n}\r\n"],"mappings":";;AAoBA,OAAM,MAAOA,YAAY;EAGvBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFhB,KAAAC,MAAM,GAAG,iCAAiC,CAAC,CAAC;EAEb;EAEvC;EACAC,SAASA,CAAA;IACP,OAAO,IAAI,CAACF,IAAI,CAACG,GAAG,CAAU,GAAG,IAAI,CAACF,MAAM,aAAa,CAAC;EAC5D;;;uBARWH,YAAY,EAAAM,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;IAAA;EAAA;;;aAAZT,YAAY;MAAAU,OAAA,EAAZV,YAAY,CAAAW,IAAA;MAAAC,UAAA,EAFX;IAAM;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}