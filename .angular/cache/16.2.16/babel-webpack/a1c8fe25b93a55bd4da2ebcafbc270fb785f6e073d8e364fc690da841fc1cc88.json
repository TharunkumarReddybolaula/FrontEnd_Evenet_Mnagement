{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nexport let AddLocationComponent = class AddLocationComponent {\n  constructor(locationService) {\n    this.locationService = locationService;\n    this.location = {\n      city: '',\n      state: '',\n      description: ''\n    };\n  }\n  onSubmit(form) {\n    if (!this.location.city || !this.location.state) {\n      alert('City and State are required!');\n      return;\n    }\n    this.locationService.addLocation(this.location).subscribe({\n      next: () => {\n        alert('Location added!');\n        this.location = {\n          city: '',\n          state: '',\n          description: ''\n        };\n        form.resetForm();\n      },\n      error: () => alert('Failed to add location.')\n    });\n  }\n};\nAddLocationComponent = __decorate([Component({\n  selector: 'app-add-location',\n  templateUrl: './add-location.component.html',\n  styleUrls: ['./add-location.component.css']\n})], AddLocationComponent);","map":{"version":3,"names":["Component","AddLocationComponent","constructor","locationService","location","city","state","description","onSubmit","form","alert","addLocation","subscribe","next","resetForm","error","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\labuser\\source\\repos\\project\\auth\\src\\app\\add-location\\add-location.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\r\nimport { LocationService, Location } from '../services/location.service';\r\n\r\n@Component({\r\n  selector: 'app-add-location',\r\n  templateUrl: './add-location.component.html',\r\n  styleUrls: ['./add-location.component.css']\r\n})\r\nexport class AddLocationComponent {\r\n  location: Location = { city: '', state: '', description: '' };\r\n\r\n  constructor(private locationService: LocationService) {}\r\n\r\n  onSubmit(form: any) {\r\n    if (!this.location.city || !this.location.state) {\r\n      alert('City and State are required!');\r\n      return;\r\n    }\r\n    this.locationService.addLocation(this.location).subscribe({\r\n      next: () => {\r\n        alert('Location added!');\r\n        this.location = { city: '', state: '', description: '' };\r\n        form.resetForm();\r\n      },\r\n      error: () => alert('Failed to add location.')\r\n    });\r\n  }\r\n}"],"mappings":";AAAA,SAASA,SAAS,QAAQ,eAAe;AAQlC,WAAMC,oBAAoB,GAA1B,MAAMA,oBAAoB;EAG/BC,YAAoBC,eAAgC;IAAhC,KAAAA,eAAe,GAAfA,eAAe;IAFnC,KAAAC,QAAQ,GAAa;MAAEC,IAAI,EAAE,EAAE;MAAEC,KAAK,EAAE,EAAE;MAAEC,WAAW,EAAE;IAAE,CAAE;EAEN;EAEvDC,QAAQA,CAACC,IAAS;IAChB,IAAI,CAAC,IAAI,CAACL,QAAQ,CAACC,IAAI,IAAI,CAAC,IAAI,CAACD,QAAQ,CAACE,KAAK,EAAE;MAC/CI,KAAK,CAAC,8BAA8B,CAAC;MACrC;;IAEF,IAAI,CAACP,eAAe,CAACQ,WAAW,CAAC,IAAI,CAACP,QAAQ,CAAC,CAACQ,SAAS,CAAC;MACxDC,IAAI,EAAEA,CAAA,KAAK;QACTH,KAAK,CAAC,iBAAiB,CAAC;QACxB,IAAI,CAACN,QAAQ,GAAG;UAAEC,IAAI,EAAE,EAAE;UAAEC,KAAK,EAAE,EAAE;UAAEC,WAAW,EAAE;QAAE,CAAE;QACxDE,IAAI,CAACK,SAAS,EAAE;MAClB,CAAC;MACDC,KAAK,EAAEA,CAAA,KAAML,KAAK,CAAC,yBAAyB;KAC7C,CAAC;EACJ;CACD;AAnBYT,oBAAoB,GAAAe,UAAA,EALhChB,SAAS,CAAC;EACTiB,QAAQ,EAAE,kBAAkB;EAC5BC,WAAW,EAAE,+BAA+B;EAC5CC,SAAS,EAAE,CAAC,8BAA8B;CAC3C,CAAC,C,EACWlB,oBAAoB,CAmBhC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}