{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nexport let ViewAdminComponent = class ViewAdminComponent {\n  constructor(adminService) {\n    this.adminService = adminService;\n    this.admins = [];\n    this.loading = false;\n    this.errorMessage = '';\n  }\n  ngOnInit() {\n    this.loadAdmins();\n  }\n  loadAdmins() {\n    this.loading = true;\n    this.adminService.getAllAdmins().subscribe({\n      next: data => {\n        this.admins = data;\n        this.loading = false;\n      },\n      error: err => {\n        console.error('Error fetching admins:', err);\n        this.errorMessage = err?.error || 'Error fetching administrators.';\n        this.loading = false;\n      }\n    });\n  }\n};\nViewAdminComponent = __decorate([Component({\n  selector: 'app-view-admin',\n  templateUrl: './view-admin.component.html',\n  styleUrls: ['./view-admin.component.css']\n})], ViewAdminComponent);","map":{"version":3,"names":["Component","ViewAdminComponent","constructor","adminService","admins","loading","errorMessage","ngOnInit","loadAdmins","getAllAdmins","subscribe","next","data","error","err","console","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\labuser\\source\\repos\\project\\auth\\src\\app\\view-admin\\view-admin.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { AdminService,Administrator } from '../services/admin.service';\r\n@Component({\r\n  selector: 'app-view-admin',\r\n  templateUrl: './view-admin.component.html',\r\n  styleUrls: ['./view-admin.component.css']\r\n})\r\nexport class ViewAdminComponent implements OnInit {\r\n\r\n  admins: Administrator[] = [];\r\n  loading: boolean = false;\r\n  errorMessage: string = '';\r\n\r\n  constructor(private adminService: AdminService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.loadAdmins();\r\n  }\r\n\r\n  loadAdmins() {\r\n    this.loading = true;\r\n    this.adminService.getAllAdmins().subscribe({\r\n      next: (data) => {\r\n        this.admins = data;\r\n        this.loading = false;\r\n      },\r\n      error: (err) => {\r\n        console.error('Error fetching admins:', err);\r\n        this.errorMessage = err?.error || 'Error fetching administrators.';\r\n        this.loading = false;\r\n      }\r\n    });\r\n  }\r\n}\r\n"],"mappings":";AAAA,SAASA,SAAS,QAAgB,eAAe;AAO1C,WAAMC,kBAAkB,GAAxB,MAAMA,kBAAkB;EAM7BC,YAAoBC,YAA0B;IAA1B,KAAAA,YAAY,GAAZA,YAAY;IAJhC,KAAAC,MAAM,GAAoB,EAAE;IAC5B,KAAAC,OAAO,GAAY,KAAK;IACxB,KAAAC,YAAY,GAAW,EAAE;EAEyB;EAElDC,QAAQA,CAAA;IACN,IAAI,CAACC,UAAU,EAAE;EACnB;EAEAA,UAAUA,CAAA;IACR,IAAI,CAACH,OAAO,GAAG,IAAI;IACnB,IAAI,CAACF,YAAY,CAACM,YAAY,EAAE,CAACC,SAAS,CAAC;MACzCC,IAAI,EAAGC,IAAI,IAAI;QACb,IAAI,CAACR,MAAM,GAAGQ,IAAI;QAClB,IAAI,CAACP,OAAO,GAAG,KAAK;MACtB,CAAC;MACDQ,KAAK,EAAGC,GAAG,IAAI;QACbC,OAAO,CAACF,KAAK,CAAC,wBAAwB,EAAEC,GAAG,CAAC;QAC5C,IAAI,CAACR,YAAY,GAAGQ,GAAG,EAAED,KAAK,IAAI,gCAAgC;QAClE,IAAI,CAACR,OAAO,GAAG,KAAK;MACtB;KACD,CAAC;EACJ;CACD;AA1BYJ,kBAAkB,GAAAe,UAAA,EAL9BhB,SAAS,CAAC;EACTiB,QAAQ,EAAE,gBAAgB;EAC1BC,WAAW,EAAE,6BAA6B;EAC1CC,SAAS,EAAE,CAAC,4BAA4B;CACzC,CAAC,C,EACWlB,kBAAkB,CA0B9B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}