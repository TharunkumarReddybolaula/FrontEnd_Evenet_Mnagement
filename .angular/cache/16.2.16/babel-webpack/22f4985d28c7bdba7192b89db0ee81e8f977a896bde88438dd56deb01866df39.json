{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../speaker.service\";\nimport * as i2 from \"@angular/forms\";\nexport class EnrollEventComponent {\n  constructor(speakerService) {\n    this.speakerService = speakerService;\n    this.speakerId = 1; // üîπ replace with logged-in speaker‚Äôs ID (later from JWT)\n    this.events = [];\n    this.successMessage = '';\n    this.errorMessage = '';\n    this.loading = false;\n  }\n  ngOnInit() {\n    this.loadEvents();\n  }\n  loadEvents() {\n    this.loading = true;\n    this.speakerService.getAvailableEvents(this.speakerId).subscribe({\n      next: res => {\n        this.events = res;\n        this.loading = false;\n      },\n      error: err => {\n        this.errorMessage = '‚ùå Failed to load events';\n        this.loading = false;\n      }\n    });\n  }\n  enroll(eventId) {\n    this.successMessage = '';\n    this.errorMessage = '';\n    this.speakerService.enrollInEvent(this.speakerId, eventId).subscribe({\n      next: () => {\n        this.successMessage = `‚úÖ Successfully enrolled in event #${eventId}`;\n        this.loadEvents(); // reload events after enrolling\n      },\n\n      error: () => {\n        this.errorMessage = '‚ùå Failed to enroll in event';\n      }\n    });\n  }\n  static {\n    this.…µfac = function EnrollEventComponent_Factory(t) {\n      return new (t || EnrollEventComponent)(i0.…µ…µdirectiveInject(i1.SpeakerService));\n    };\n  }\n  static {\n    this.…µcmp = /*@__PURE__*/i0.…µ…µdefineComponent({\n      type: EnrollEventComponent,\n      selectors: [[\"app-enroll-event\"]],\n      decls: 10,\n      vars: 0,\n      consts: [[1, \"card\"], [1, \"form-group\"], [\"type\", \"number\", \"placeholder\", \"Enter Event ID\"], [1, \"btn-gold\"]],\n      template: function EnrollEventComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.…µ…µelementStart(0, \"div\", 0)(1, \"h2\");\n          i0.…µ…µtext(2, \"Enroll in Event\");\n          i0.…µ…µelementEnd();\n          i0.…µ…µelementStart(3, \"form\")(4, \"div\", 1)(5, \"label\");\n          i0.…µ…µtext(6, \"Event ID\");\n          i0.…µ…µelementEnd();\n          i0.…µ…µelement(7, \"input\", 2);\n          i0.…µ…µelementEnd();\n          i0.…µ…µelementStart(8, \"button\", 3);\n          i0.…µ…µtext(9, \"Enroll\");\n          i0.…µ…µelementEnd()()();\n        }\n      },\n      dependencies: [i2.…µNgNoValidate, i2.NgControlStatusGroup, i2.NgForm],\n      styles: [\".card[_ngcontent-%COMP%] {\\n  background: #1a1a1a;\\n  color: #FFD700;\\n  padding: 30px;\\n  border-radius: 15px;\\n  box-shadow: 0 0 20px rgba(255, 215, 0, 0.2);\\n  max-width: 500px;\\n  margin: 40px auto;\\n  text-align: center;\\n}\\n\\n.card[_ngcontent-%COMP%]   h2[_ngcontent-%COMP%] {\\n  margin-bottom: 20px;\\n}\\n\\n.form-group[_ngcontent-%COMP%] {\\n  margin-bottom: 18px;\\n  display: flex;\\n  flex-direction: column;\\n}\\n\\n.form-group[_ngcontent-%COMP%]   label[_ngcontent-%COMP%] {\\n  margin-bottom: 6px;\\n  font-weight: 600;\\n}\\n\\n.form-group[_ngcontent-%COMP%]   input[_ngcontent-%COMP%] {\\n  padding: 12px;\\n  border-radius: 10px;\\n  border: 1px solid #FFD700;\\n  background: #222;\\n  color: #fff;\\n  font-size: 1rem;\\n  outline: none;\\n}\\n\\n.form-group[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]:focus {\\n  border-color: #E6C200;\\n}\\n\\n.btn-gold[_ngcontent-%COMP%] {\\n  background-color: #FFD700;\\n  color: #1a1a1a;\\n  padding: 12px 24px;\\n  border: none;\\n  border-radius: 8px;\\n  font-weight: 600;\\n  cursor: pointer;\\n  transition: background-color 0.3s;\\n}\\n\\n.btn-gold[_ngcontent-%COMP%]:hover {\\n  background-color: #E6C200;\\n}\\n\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvZW5yb2xsLWV2ZW50L2Vucm9sbC1ldmVudC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsbUJBQW1CO0VBQ25CLGNBQWM7RUFDZCxhQUFhO0VBQ2IsbUJBQW1CO0VBQ25CLDJDQUEyQztFQUMzQyxnQkFBZ0I7RUFDaEIsaUJBQWlCO0VBQ2pCLGtCQUFrQjtBQUNwQjs7QUFFQTtFQUNFLG1CQUFtQjtBQUNyQjs7QUFFQTtFQUNFLG1CQUFtQjtFQUNuQixhQUFhO0VBQ2Isc0JBQXNCO0FBQ3hCOztBQUVBO0VBQ0Usa0JBQWtCO0VBQ2xCLGdCQUFnQjtBQUNsQjs7QUFFQTtFQUNFLGFBQWE7RUFDYixtQkFBbUI7RUFDbkIseUJBQXlCO0VBQ3pCLGdCQUFnQjtFQUNoQixXQUFXO0VBQ1gsZUFBZTtFQUNmLGFBQWE7QUFDZjs7QUFFQTtFQUNFLHFCQUFxQjtBQUN2Qjs7QUFFQTtFQUNFLHlCQUF5QjtFQUN6QixjQUFjO0VBQ2Qsa0JBQWtCO0VBQ2xCLFlBQVk7RUFDWixrQkFBa0I7RUFDbEIsZ0JBQWdCO0VBQ2hCLGVBQWU7RUFDZixpQ0FBaUM7QUFDbkM7O0FBRUE7RUFDRSx5QkFBeUI7QUFDM0IiLCJzb3VyY2VzQ29udGVudCI6WyIuY2FyZCB7XHJcbiAgYmFja2dyb3VuZDogIzFhMWExYTtcclxuICBjb2xvcjogI0ZGRDcwMDtcclxuICBwYWRkaW5nOiAzMHB4O1xyXG4gIGJvcmRlci1yYWRpdXM6IDE1cHg7XHJcbiAgYm94LXNoYWRvdzogMCAwIDIwcHggcmdiYSgyNTUsIDIxNSwgMCwgMC4yKTtcclxuICBtYXgtd2lkdGg6IDUwMHB4O1xyXG4gIG1hcmdpbjogNDBweCBhdXRvO1xyXG4gIHRleHQtYWxpZ246IGNlbnRlcjtcclxufVxyXG5cclxuLmNhcmQgaDIge1xyXG4gIG1hcmdpbi1ib3R0b206IDIwcHg7XHJcbn1cclxuXHJcbi5mb3JtLWdyb3VwIHtcclxuICBtYXJnaW4tYm90dG9tOiAxOHB4O1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxufVxyXG5cclxuLmZvcm0tZ3JvdXAgbGFiZWwge1xyXG4gIG1hcmdpbi1ib3R0b206IDZweDtcclxuICBmb250LXdlaWdodDogNjAwO1xyXG59XHJcblxyXG4uZm9ybS1ncm91cCBpbnB1dCB7XHJcbiAgcGFkZGluZzogMTJweDtcclxuICBib3JkZXItcmFkaXVzOiAxMHB4O1xyXG4gIGJvcmRlcjogMXB4IHNvbGlkICNGRkQ3MDA7XHJcbiAgYmFja2dyb3VuZDogIzIyMjtcclxuICBjb2xvcjogI2ZmZjtcclxuICBmb250LXNpemU6IDFyZW07XHJcbiAgb3V0bGluZTogbm9uZTtcclxufVxyXG5cclxuLmZvcm0tZ3JvdXAgaW5wdXQ6Zm9jdXMge1xyXG4gIGJvcmRlci1jb2xvcjogI0U2QzIwMDtcclxufVxyXG5cclxuLmJ0bi1nb2xkIHtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjRkZENzAwO1xyXG4gIGNvbG9yOiAjMWExYTFhO1xyXG4gIHBhZGRpbmc6IDEycHggMjRweDtcclxuICBib3JkZXI6IG5vbmU7XHJcbiAgYm9yZGVyLXJhZGl1czogOHB4O1xyXG4gIGZvbnQtd2VpZ2h0OiA2MDA7XHJcbiAgY3Vyc29yOiBwb2ludGVyO1xyXG4gIHRyYW5zaXRpb246IGJhY2tncm91bmQtY29sb3IgMC4zcztcclxufVxyXG5cclxuLmJ0bi1nb2xkOmhvdmVyIHtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjRTZDMjAwO1xyXG59XHJcbiJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n    });\n  }\n}","map":{"version":3,"names":["EnrollEventComponent","constructor","speakerService","speakerId","events","successMessage","errorMessage","loading","ngOnInit","loadEvents","getAvailableEvents","subscribe","next","res","error","err","enroll","eventId","enrollInEvent","i0","…µ…µdirectiveInject","i1","SpeakerService","selectors","decls","vars","consts","template","EnrollEventComponent_Template","rf","ctx","…µ…µelementStart","…µ…µtext","…µ…µelementEnd","…µ…µelement"],"sources":["C:\\Users\\labuser\\source\\repos\\project\\auth\\src\\app\\enroll-event\\enroll-event.component.ts","C:\\Users\\labuser\\source\\repos\\project\\auth\\src\\app\\enroll-event\\enroll-event.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { SpeakerService, EventModel } from '../speaker.service';\n\n@Component({\n  selector: 'app-enroll-event',\n  templateUrl: './enroll-event.component.html',\n  styleUrls: ['./enroll-event.component.css']\n})\nexport class EnrollEventComponent implements OnInit {\n  speakerId = 1; // üîπ replace with logged-in speaker‚Äôs ID (later from JWT)\n  events: EventModel[] = [];\n  successMessage = '';\n  errorMessage = '';\n  loading = false;\n\n  constructor(private speakerService: SpeakerService) {}\n\n  ngOnInit(): void {\n    this.loadEvents();\n  }\n\n  loadEvents() {\n    this.loading = true;\n    this.speakerService.getAvailableEvents(this.speakerId).subscribe({\n      next: (res) => {\n        this.events = res;\n        this.loading = false;\n      },\n      error: (err) => {\n        this.errorMessage = '‚ùå Failed to load events';\n        this.loading = false;\n      }\n    });\n  }\n\n  enroll(eventId: number) {\n    this.successMessage = '';\n    this.errorMessage = '';\n    this.speakerService.enrollInEvent(this.speakerId, eventId).subscribe({\n      next: () => {\n        this.successMessage = `‚úÖ Successfully enrolled in event #${eventId}`;\n        this.loadEvents(); // reload events after enrolling\n      },\n      error: () => {\n        this.errorMessage = '‚ùå Failed to enroll in event';\n      }\n    });\n  }\n}\n","<div class=\"card\">\n  <h2>Enroll in Event</h2>\n  <form>\n    <div class=\"form-group\">\n      <label>Event ID</label>\n      <input type=\"number\" placeholder=\"Enter Event ID\" />\n    </div>\n    <button class=\"btn-gold\">Enroll</button>\n  </form>\n</div>\n"],"mappings":";;;AAQA,OAAM,MAAOA,oBAAoB;EAO/BC,YAAoBC,cAA8B;IAA9B,KAAAA,cAAc,GAAdA,cAAc;IANlC,KAAAC,SAAS,GAAG,CAAC,CAAC,CAAC;IACf,KAAAC,MAAM,GAAiB,EAAE;IACzB,KAAAC,cAAc,GAAG,EAAE;IACnB,KAAAC,YAAY,GAAG,EAAE;IACjB,KAAAC,OAAO,GAAG,KAAK;EAEsC;EAErDC,QAAQA,CAAA;IACN,IAAI,CAACC,UAAU,EAAE;EACnB;EAEAA,UAAUA,CAAA;IACR,IAAI,CAACF,OAAO,GAAG,IAAI;IACnB,IAAI,CAACL,cAAc,CAACQ,kBAAkB,CAAC,IAAI,CAACP,SAAS,CAAC,CAACQ,SAAS,CAAC;MAC/DC,IAAI,EAAGC,GAAG,IAAI;QACZ,IAAI,CAACT,MAAM,GAAGS,GAAG;QACjB,IAAI,CAACN,OAAO,GAAG,KAAK;MACtB,CAAC;MACDO,KAAK,EAAGC,GAAG,IAAI;QACb,IAAI,CAACT,YAAY,GAAG,yBAAyB;QAC7C,IAAI,CAACC,OAAO,GAAG,KAAK;MACtB;KACD,CAAC;EACJ;EAEAS,MAAMA,CAACC,OAAe;IACpB,IAAI,CAACZ,cAAc,GAAG,EAAE;IACxB,IAAI,CAACC,YAAY,GAAG,EAAE;IACtB,IAAI,CAACJ,cAAc,CAACgB,aAAa,CAAC,IAAI,CAACf,SAAS,EAAEc,OAAO,CAAC,CAACN,SAAS,CAAC;MACnEC,IAAI,EAAEA,CAAA,KAAK;QACT,IAAI,CAACP,cAAc,GAAG,qCAAqCY,OAAO,EAAE;QACpE,IAAI,CAACR,UAAU,EAAE,CAAC,CAAC;MACrB,CAAC;;MACDK,KAAK,EAAEA,CAAA,KAAK;QACV,IAAI,CAACR,YAAY,GAAG,6BAA6B;MACnD;KACD,CAAC;EACJ;;;uBAvCWN,oBAAoB,EAAAmB,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,cAAA;IAAA;EAAA;;;YAApBtB,oBAAoB;MAAAuB,SAAA;MAAAC,KAAA;MAAAC,IAAA;MAAAC,MAAA;MAAAC,QAAA,WAAAC,8BAAAC,EAAA,EAAAC,GAAA;QAAA,IAAAD,EAAA;UCRjCV,EAAA,CAAAY,cAAA,aAAkB;UACZZ,EAAA,CAAAa,MAAA,sBAAe;UAAAb,EAAA,CAAAc,YAAA,EAAK;UACxBd,EAAA,CAAAY,cAAA,WAAM;UAEKZ,EAAA,CAAAa,MAAA,eAAQ;UAAAb,EAAA,CAAAc,YAAA,EAAQ;UACvBd,EAAA,CAAAe,SAAA,eAAoD;UACtDf,EAAA,CAAAc,YAAA,EAAM;UACNd,EAAA,CAAAY,cAAA,gBAAyB;UAAAZ,EAAA,CAAAa,MAAA,aAAM;UAAAb,EAAA,CAAAc,YAAA,EAAS","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}