{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class AuthService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = 'http://localhost:5070/api/Auth';\n  }\n  signin(request) {\n    return this.http.post(`${this.apiUrl}/signin`, request);\n  }\n  saveToken(token) {\n    localStorage.setItem('token', token);\n  }\n  getToken() {\n    return localStorage.getItem('token');\n  }\n  logout() {\n    localStorage.removeItem('token');\n  }\n  isLoggedIn() {\n    return !!this.getToken();\n  }\n  static {\n    this.ɵfac = function AuthService_Factory(t) {\n      return new (t || AuthService)(i0.ɵɵinject(i1.HttpClient));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: AuthService,\n      factory: AuthService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["AuthService","constructor","http","apiUrl","signin","request","post","saveToken","token","localStorage","setItem","getToken","getItem","logout","removeItem","isLoggedIn","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\Users\\labuser\\source\\repos\\project\\auth\\src\\app\\auth.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\nexport interface SignInRequest {\n  username: string;\n  password: string;\n  role: string; // add role to satisfy backend validation\n}\n\n\nexport interface SignInResponse {\n  message: string;\n  token: string;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  private apiUrl = 'http://localhost:5070/api/Auth';\n\n  constructor(private http: HttpClient) {}\n\n  signin(request: SignInRequest): Observable<SignInResponse> {\n    return this.http.post<SignInResponse>(`${this.apiUrl}/signin`, request);\n  }\n\n  saveToken(token: string) {\n    localStorage.setItem('token', token);\n  }\n\n  getToken(): string | null {\n    return localStorage.getItem('token');\n  }\n\n  logout() {\n    localStorage.removeItem('token');\n  }\n\n  isLoggedIn(): boolean {\n    return !!this.getToken();\n  }\n}\n"],"mappings":";;AAmBA,OAAM,MAAOA,WAAW;EAGtBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFhB,KAAAC,MAAM,GAAG,gCAAgC;EAEV;EAEvCC,MAAMA,CAACC,OAAsB;IAC3B,OAAO,IAAI,CAACH,IAAI,CAACI,IAAI,CAAiB,GAAG,IAAI,CAACH,MAAM,SAAS,EAAEE,OAAO,CAAC;EACzE;EAEAE,SAASA,CAACC,KAAa;IACrBC,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEF,KAAK,CAAC;EACtC;EAEAG,QAAQA,CAAA;IACN,OAAOF,YAAY,CAACG,OAAO,CAAC,OAAO,CAAC;EACtC;EAEAC,MAAMA,CAAA;IACJJ,YAAY,CAACK,UAAU,CAAC,OAAO,CAAC;EAClC;EAEAC,UAAUA,CAAA;IACR,OAAO,CAAC,CAAC,IAAI,CAACJ,QAAQ,EAAE;EAC1B;;;uBAvBWX,WAAW,EAAAgB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;IAAA;EAAA;;;aAAXnB,WAAW;MAAAoB,OAAA,EAAXpB,WAAW,CAAAqB,IAAA;MAAAC,UAAA,EAFV;IAAM;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}