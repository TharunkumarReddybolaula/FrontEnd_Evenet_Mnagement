{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class TopicServiceService {\n  constructor(http) {\n    this.http = http;\n    this.baseUrl = 'http://localhost:5070/api/topic'; // Base URL for the Topic API\n  }\n\n  getAllTopics() {\n    return this.http.get(`${this.baseUrl}/Topic/view`);\n  }\n  addTopic(topic) {\n    return this.http.post(`${this.baseUrl}/Topic/Add`, topic);\n  }\n  updateTopic(id, topic) {\n    return this.http.put(`${this.baseUrl}/Topic/Modify?id=${id}`, topic);\n  }\n  static {\n    this.ɵfac = function TopicServiceService_Factory(t) {\n      return new (t || TopicServiceService)(i0.ɵɵinject(i1.HttpClient));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: TopicServiceService,\n      factory: TopicServiceService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["TopicServiceService","constructor","http","baseUrl","getAllTopics","get","addTopic","topic","post","updateTopic","id","put","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\Users\\labuser\\source\\repos\\project\\auth\\src\\app\\services copy\\topic-service.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\nexport interface Topic {\r\n  topicId?: number;\r\n  topicCode: string;\r\n  topicName: string;\r\n  category: string;\r\n  description?: string;\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class TopicServiceService {\r\n  private baseUrl = 'http://localhost:5070/api/topic'; // Base URL for the Topic API\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getAllTopics(): Observable<Topic[]> {\r\n    return this.http.get<Topic[]>(`${this.baseUrl}/Topic/view`);\r\n  }\r\n  addTopic(topic: Topic): Observable<Topic> {\r\n  return this.http.post<Topic>(`${this.baseUrl}/Topic/Add`, topic); \r\n}\r\nupdateTopic(id: number, topic: Topic): Observable<any> {\r\n return this.http.put<Topic>(`${this.baseUrl}/Topic/Modify?id=${id}`, topic);\r\n}\r\n\r\n}\r\n"],"mappings":";;AAgBA,OAAM,MAAOA,mBAAmB;EAG9BC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFhB,KAAAC,OAAO,GAAG,iCAAiC,CAAC,CAAC;EAEb;;EAExCC,YAAYA,CAAA;IACV,OAAO,IAAI,CAACF,IAAI,CAACG,GAAG,CAAU,GAAG,IAAI,CAACF,OAAO,aAAa,CAAC;EAC7D;EACAG,QAAQA,CAACC,KAAY;IACrB,OAAO,IAAI,CAACL,IAAI,CAACM,IAAI,CAAQ,GAAG,IAAI,CAACL,OAAO,YAAY,EAAEI,KAAK,CAAC;EAClE;EACAE,WAAWA,CAACC,EAAU,EAAEH,KAAY;IACnC,OAAO,IAAI,CAACL,IAAI,CAACS,GAAG,CAAQ,GAAG,IAAI,CAACR,OAAO,oBAAoBO,EAAE,EAAE,EAAEH,KAAK,CAAC;EAC5E;;;uBAbaP,mBAAmB,EAAAY,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;IAAA;EAAA;;;aAAnBf,mBAAmB;MAAAgB,OAAA,EAAnBhB,mBAAmB,CAAAiB,IAAA;MAAAC,UAAA,EAFlB;IAAM;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}