{"ast":null,"code":"import { HttpParams } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class AdminService {\n  constructor(http) {\n    this.http = http;\n    this.baseUrl = 'http://localhost:5070/api/Administrator';\n  }\n  // Add admin\n  addAdmin(admin, username, password) {\n    // Build query parameters\n    const params = new HttpParams().set('username', username).set('password', password);\n    // POST request with admin in body, username/password as query params\n    return this.http.post(`${this.baseUrl}/Admin/Add`, admin,\n    // body\n    {\n      params\n    } // query string\n    );\n  }\n  // Get all admins\n  getAllAdmins() {\n    return this.http.get(`${this.baseUrl}/Admin/View`);\n  }\n  static {\n    this.ɵfac = function AdminService_Factory(t) {\n      return new (t || AdminService)(i0.ɵɵinject(i1.HttpClient));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: AdminService,\n      factory: AdminService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["HttpParams","AdminService","constructor","http","baseUrl","addAdmin","admin","username","password","params","set","post","getAllAdmins","get","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\Users\\labuser\\source\\repos\\project\\auth\\src\\app\\services copy\\admin.service.ts"],"sourcesContent":["import { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\n\r\nexport interface Administrator {\r\n  adminId?: number;\r\n  name: string;\r\n  email: string;\r\n  phone: string;\r\n  userId?: number;\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AdminService {\r\n  private baseUrl = 'http://localhost:5070/api/Administrator';\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  // Add admin\r\n  addAdmin(admin: Administrator, username: string, password: string): Observable<any> {\r\n    // Build query parameters\r\n    const params = new HttpParams()\r\n      .set('username', username)\r\n      .set('password', password);\r\n\r\n    // POST request with admin in body, username/password as query params\r\n    return this.http.post<any>(\r\n      `${this.baseUrl}/Admin/Add`,\r\n      admin,       // body\r\n      { params }   // query string\r\n    );\r\n  }\r\n\r\n  // Get all admins\r\n  getAllAdmins(): Observable<Administrator[]> {\r\n    return this.http.get<Administrator[]>(`${this.baseUrl}/Admin/View`);\r\n  }\r\n}\r\n"],"mappings":"AAAA,SAAqBA,UAAU,QAAQ,sBAAsB;;;AAe7D,OAAM,MAAOC,YAAY;EAGvBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFhB,KAAAC,OAAO,GAAG,yCAAyC;EAEnB;EAExC;EACAC,QAAQA,CAACC,KAAoB,EAAEC,QAAgB,EAAEC,QAAgB;IAC/D;IACA,MAAMC,MAAM,GAAG,IAAIT,UAAU,EAAE,CAC5BU,GAAG,CAAC,UAAU,EAAEH,QAAQ,CAAC,CACzBG,GAAG,CAAC,UAAU,EAAEF,QAAQ,CAAC;IAE5B;IACA,OAAO,IAAI,CAACL,IAAI,CAACQ,IAAI,CACnB,GAAG,IAAI,CAACP,OAAO,YAAY,EAC3BE,KAAK;IAAQ;IACb;MAAEG;IAAM,CAAE,CAAG;KACd;EACH;EAEA;EACAG,YAAYA,CAAA;IACV,OAAO,IAAI,CAACT,IAAI,CAACU,GAAG,CAAkB,GAAG,IAAI,CAACT,OAAO,aAAa,CAAC;EACrE;;;uBAvBWH,YAAY,EAAAa,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;IAAA;EAAA;;;aAAZhB,YAAY;MAAAiB,OAAA,EAAZjB,YAAY,CAAAkB,IAAA;MAAAC,UAAA,EAFX;IAAM;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}