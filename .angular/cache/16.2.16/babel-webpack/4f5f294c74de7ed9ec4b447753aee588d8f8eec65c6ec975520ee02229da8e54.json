{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nexport let RegisterComponent = class RegisterComponent {\n  constructor(http) {\n    this.http = http;\n    this.participant = {\n      name: '',\n      email: '',\n      phone: '',\n      user: {\n        username: '',\n        password: '' // ✅ must be initialized\n      }\n    };\n\n    this.loading = false;\n    this.successMessage = '';\n    this.errorMessage = '';\n    this.apiUrl = 'http://localhost:5070/api/Participants/Register';\n  }\n  onSubmit(form) {\n    if (form.invalid) {\n      this.errorMessage = 'Please fill in all required fields correctly.';\n      return;\n    }\n    this.loading = true;\n    this.successMessage = '';\n    this.errorMessage = '';\n    this.http.post(this.apiUrl, this.participant).subscribe({\n      next: res => {\n        this.successMessage = res.message || 'Participant registered successfully!';\n        this.errorMessage = '';\n        this.loading = false;\n        // Reset form\n        form.resetForm();\n        this.participant = {\n          name: '',\n          email: '',\n          phone: '',\n          user: {\n            username: '',\n            password: ''\n          }\n        };\n      },\n      error: err => {\n        this.errorMessage = err.error || 'An error occurred during registration.';\n        this.successMessage = '';\n        this.loading = false;\n      }\n    });\n  }\n};\nRegisterComponent = __decorate([Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})], RegisterComponent);","map":{"version":3,"names":["Component","RegisterComponent","constructor","http","participant","name","email","phone","user","username","password","loading","successMessage","errorMessage","apiUrl","onSubmit","form","invalid","post","subscribe","next","res","message","resetForm","error","err","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\labuser\\source\\repos\\project\\auth\\src\\app\\register-speaker\\register-speaker.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\ninterface User {\n  username: string;\n  password: string;\n}\n\ninterface Participant {\n  name: string;\n  email: string;\n  phone: string;\n  user: User;\n}\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent {\n  participant: Participant = {\n    name: '',\n    email: '',\n    phone: '',\n    user: {\n      username: '',  // ✅ must be initialized\n      password: ''   // ✅ must be initialized\n    }\n  };\n\n  loading = false;\n  successMessage = '';\n  errorMessage = '';\n\n  private apiUrl = 'http://localhost:5070/api/Participants/Register';\n\n  constructor(private http: HttpClient) {}\n\n  onSubmit(form: any) {\n    if (form.invalid) {\n      this.errorMessage = 'Please fill in all required fields correctly.';\n      return;\n    }\n\n    this.loading = true;\n    this.successMessage = '';\n    this.errorMessage = '';\n\n    this.http.post<any>(this.apiUrl, this.participant).subscribe({\n      next: (res) => {\n        this.successMessage = res.message || 'Participant registered successfully!';\n        this.errorMessage = '';\n        this.loading = false;\n\n        // Reset form\n        form.resetForm();\n        this.participant = {\n          name: '',\n          email: '',\n          phone: '',\n          user: {\n            username: '',\n            password: ''\n          }\n        };\n      },\n      error: (err) => {\n        this.errorMessage = err.error || 'An error occurred during registration.';\n        this.successMessage = '';\n        this.loading = false;\n      }\n    });\n  }\n}\n"],"mappings":";AAAA,SAASA,SAAS,QAAQ,eAAe;AAoBlC,WAAMC,iBAAiB,GAAvB,MAAMA,iBAAiB;EAiB5BC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAhBxB,KAAAC,WAAW,GAAgB;MACzBC,IAAI,EAAE,EAAE;MACRC,KAAK,EAAE,EAAE;MACTC,KAAK,EAAE,EAAE;MACTC,IAAI,EAAE;QACJC,QAAQ,EAAE,EAAE;QACZC,QAAQ,EAAE,EAAE,CAAG;;KAElB;;IAED,KAAAC,OAAO,GAAG,KAAK;IACf,KAAAC,cAAc,GAAG,EAAE;IACnB,KAAAC,YAAY,GAAG,EAAE;IAET,KAAAC,MAAM,GAAG,iDAAiD;EAE3B;EAEvCC,QAAQA,CAACC,IAAS;IAChB,IAAIA,IAAI,CAACC,OAAO,EAAE;MAChB,IAAI,CAACJ,YAAY,GAAG,+CAA+C;MACnE;;IAGF,IAAI,CAACF,OAAO,GAAG,IAAI;IACnB,IAAI,CAACC,cAAc,GAAG,EAAE;IACxB,IAAI,CAACC,YAAY,GAAG,EAAE;IAEtB,IAAI,CAACV,IAAI,CAACe,IAAI,CAAM,IAAI,CAACJ,MAAM,EAAE,IAAI,CAACV,WAAW,CAAC,CAACe,SAAS,CAAC;MAC3DC,IAAI,EAAGC,GAAG,IAAI;QACZ,IAAI,CAACT,cAAc,GAAGS,GAAG,CAACC,OAAO,IAAI,sCAAsC;QAC3E,IAAI,CAACT,YAAY,GAAG,EAAE;QACtB,IAAI,CAACF,OAAO,GAAG,KAAK;QAEpB;QACAK,IAAI,CAACO,SAAS,EAAE;QAChB,IAAI,CAACnB,WAAW,GAAG;UACjBC,IAAI,EAAE,EAAE;UACRC,KAAK,EAAE,EAAE;UACTC,KAAK,EAAE,EAAE;UACTC,IAAI,EAAE;YACJC,QAAQ,EAAE,EAAE;YACZC,QAAQ,EAAE;;SAEb;MACH,CAAC;MACDc,KAAK,EAAGC,GAAG,IAAI;QACb,IAAI,CAACZ,YAAY,GAAGY,GAAG,CAACD,KAAK,IAAI,wCAAwC;QACzE,IAAI,CAACZ,cAAc,GAAG,EAAE;QACxB,IAAI,CAACD,OAAO,GAAG,KAAK;MACtB;KACD,CAAC;EACJ;CACD;AAtDYV,iBAAiB,GAAAyB,UAAA,EAL7B1B,SAAS,CAAC;EACT2B,QAAQ,EAAE,cAAc;EACxBC,WAAW,EAAE,2BAA2B;EACxCC,SAAS,EAAE,CAAC,0BAA0B;CACvC,CAAC,C,EACW5B,iBAAiB,CAsD7B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}