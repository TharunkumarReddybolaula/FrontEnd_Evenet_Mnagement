{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimpo;\nexport let AdminComponent = class AdminComponent {\n  constructor(adminService) {\n    this.adminService = adminService;\n    this.admins = [];\n    this.events = [];\n  }\n  ngOnInit() {\n    this.fetchAdmins();\n    this.fetchEvents();\n  }\n  fetchAdmins() {\n    this.adminService.getAllAdmins().subscribe(data => {\n      this.admins = data;\n    });\n  }\n  fetchEvents() {\n    this.adminService.getAllEvents().subscribe(data => {\n      this.events = data;\n    });\n  }\n  addAdmin(admin, username, password) {\n    this.adminService.addAdmin(admin, username, password).subscribe(response => {\n      console.log('Admin added:', response);\n    });\n  }\n  addEvent(event) {\n    this.adminService.addEvent(event).subscribe(response => {\n      console.log('Event added:', response);\n    });\n  }\n};\nAdminComponent = __decorate([Component({\n  selector: 'app-admin',\n  templateUrl: './admin.component.html',\n  styleUrls: ['./admin.component.css']\n})], AdminComponent);","map":{"version":3,"names":["Component","impo","AdminComponent","constructor","adminService","admins","events","ngOnInit","fetchAdmins","fetchEvents","getAllAdmins","subscribe","data","getAllEvents","addAdmin","admin","username","password","response","console","log","addEvent","event","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\labuser\\source\\repos\\project\\auth\\src\\app\\services copy\\admin.service.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimpo\r\n@Component({\r\n  selector: 'app-admin',\r\n  templateUrl: './admin.component.html',\r\n  styleUrls: ['./admin.component.css']\r\n})\r\nexport class AdminComponent implements OnInit {\r\n\r\n  admins: any[] = [];\r\n  events: any[] = [];\r\n\r\n  constructor(private adminService: AdminService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.fetchAdmins();\r\n    this.fetchEvents();\r\n  }\r\n\r\n  fetchAdmins(): void {\r\n    this.adminService.getAllAdmins().subscribe(data => {\r\n      this.admins = data;\r\n    });\r\n  }\r\n\r\n  fetchEvents(): void {\r\n    this.adminService.getAllEvents().subscribe(data => {\r\n      this.events = data;\r\n    });\r\n  }\r\n\r\n  addAdmin(admin: any, username: string, password: string): void {\r\n    this.adminService.addAdmin(admin, username, password).subscribe(response => {\r\n      console.log('Admin added:', response);\r\n    });\r\n  }\r\n\r\n  addEvent(event: any): void {\r\n    this.adminService.addEvent(event).subscribe(response => {\r\n      console.log('Event added:', response);\r\n    });\r\n  }\r\n}\r\n"],"mappings":";AAAA,SAASA,SAAS,QAAgB,eAAe;AACjDC,IAAI;AAMG,WAAMC,cAAc,GAApB,MAAMA,cAAc;EAKzBC,YAAoBC,YAA0B;IAA1B,KAAAA,YAAY,GAAZA,YAAY;IAHhC,KAAAC,MAAM,GAAU,EAAE;IAClB,KAAAC,MAAM,GAAU,EAAE;EAEgC;EAElDC,QAAQA,CAAA;IACN,IAAI,CAACC,WAAW,EAAE;IAClB,IAAI,CAACC,WAAW,EAAE;EACpB;EAEAD,WAAWA,CAAA;IACT,IAAI,CAACJ,YAAY,CAACM,YAAY,EAAE,CAACC,SAAS,CAACC,IAAI,IAAG;MAChD,IAAI,CAACP,MAAM,GAAGO,IAAI;IACpB,CAAC,CAAC;EACJ;EAEAH,WAAWA,CAAA;IACT,IAAI,CAACL,YAAY,CAACS,YAAY,EAAE,CAACF,SAAS,CAACC,IAAI,IAAG;MAChD,IAAI,CAACN,MAAM,GAAGM,IAAI;IACpB,CAAC,CAAC;EACJ;EAEAE,QAAQA,CAACC,KAAU,EAAEC,QAAgB,EAAEC,QAAgB;IACrD,IAAI,CAACb,YAAY,CAACU,QAAQ,CAACC,KAAK,EAAEC,QAAQ,EAAEC,QAAQ,CAAC,CAACN,SAAS,CAACO,QAAQ,IAAG;MACzEC,OAAO,CAACC,GAAG,CAAC,cAAc,EAAEF,QAAQ,CAAC;IACvC,CAAC,CAAC;EACJ;EAEAG,QAAQA,CAACC,KAAU;IACjB,IAAI,CAAClB,YAAY,CAACiB,QAAQ,CAACC,KAAK,CAAC,CAACX,SAAS,CAACO,QAAQ,IAAG;MACrDC,OAAO,CAACC,GAAG,CAAC,cAAc,EAAEF,QAAQ,CAAC;IACvC,CAAC,CAAC;EACJ;CACD;AAnCYhB,cAAc,GAAAqB,UAAA,EAL1BvB,SAAS,CAAC;EACTwB,QAAQ,EAAE,WAAW;EACrBC,WAAW,EAAE,wBAAwB;EACrCC,SAAS,EAAE,CAAC,uBAAuB;CACpC,CAAC,C,EACWxB,cAAc,CAmC1B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}