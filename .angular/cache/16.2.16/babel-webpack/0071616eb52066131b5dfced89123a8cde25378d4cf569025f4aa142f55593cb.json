{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class LocationService {\n  constructor(http) {\n    this.http = http;\n    this.baseUrl = 'http://localhost:5070/api/Admin'; // Make sure this is the correct base URL\n  }\n  /** Get a location by ID */\n  getLocationById(id) {\n    return this.http.get(`${this.baseUrl}/get?id=${id}`);\n  }\n  /** Add a new location */\n  addLocation(location) {\n    return this.http.post(`${this.baseUrl}/Add`, location);\n  }\n  /** Get all locations */\n  getLocations() {\n    return this.http.get(`${this.baseUrl}/Locations`); // Assuming the correct endpoint is /Locations\n  }\n  /** Update a location */\n  updateLocation(location, id) {\n    return this.http.put(`${this.baseUrl}/Modify/${id}`, location); // Ensure correct endpoint and pass ID in URL\n  }\n  /** Delete a location */\n  deleteLocation(locationId) {\n    return this.http.delete(`${this.baseUrl}/delete?id=${locationId}`); // Ensure correct endpoint for deleting\n  }\n\n  static {\n    this.ɵfac = function LocationService_Factory(t) {\n      return new (t || LocationService)(i0.ɵɵinject(i1.HttpClient));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: LocationService,\n      factory: LocationService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["LocationService","constructor","http","baseUrl","getLocationById","id","get","addLocation","location","post","getLocations","updateLocation","put","deleteLocation","locationId","delete","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\Users\\labuser\\source\\repos\\project\\auth\\src\\app\\services copy\\location.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\nexport interface Location {\r\n  locationId?: number;\r\n  city: string;\r\n  state: string;\r\n  description: string;\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class LocationService {\r\n  private baseUrl = 'http://localhost:5070/api/Admin';  // Make sure this is the correct base URL\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  /** Get a location by ID */\r\n  getLocationById(id: number): Observable<Location> {\r\n    return this.http.get<Location>(`${this.baseUrl}/get?id=${id}`);\r\n  }\r\n\r\n  /** Add a new location */\r\n  addLocation(location: Location): Observable<any> {\r\n    return this.http.post(`${this.baseUrl}/Add`, location);\r\n  }\r\n\r\n  /** Get all locations */\r\n  getLocations(): Observable<Location[]> {\r\n    return this.http.get<Location[]>(`${this.baseUrl}/Locations`);  // Assuming the correct endpoint is /Locations\r\n  }\r\n\r\n  /** Update a location */\r\n  updateLocation(location: Location, id: number): Observable<any> {\r\n    return this.http.put(`${this.baseUrl}/Modify/${id}`, location);  // Ensure correct endpoint and pass ID in URL\r\n  }\r\n\r\n  /** Delete a location */\r\n  deleteLocation(locationId: number): Observable<any> {\r\n    return this.http.delete(`${this.baseUrl}/delete?id=${locationId}`);  // Ensure correct endpoint for deleting\r\n  }\r\n}\r\n"],"mappings":";;AAcA,OAAM,MAAOA,eAAe;EAG1BC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFhB,KAAAC,OAAO,GAAG,iCAAiC,CAAC,CAAE;EAEf;EAEvC;EACAC,eAAeA,CAACC,EAAU;IACxB,OAAO,IAAI,CAACH,IAAI,CAACI,GAAG,CAAW,GAAG,IAAI,CAACH,OAAO,WAAWE,EAAE,EAAE,CAAC;EAChE;EAEA;EACAE,WAAWA,CAACC,QAAkB;IAC5B,OAAO,IAAI,CAACN,IAAI,CAACO,IAAI,CAAC,GAAG,IAAI,CAACN,OAAO,MAAM,EAAEK,QAAQ,CAAC;EACxD;EAEA;EACAE,YAAYA,CAAA;IACV,OAAO,IAAI,CAACR,IAAI,CAACI,GAAG,CAAa,GAAG,IAAI,CAACH,OAAO,YAAY,CAAC,CAAC,CAAE;EAClE;EAEA;EACAQ,cAAcA,CAACH,QAAkB,EAAEH,EAAU;IAC3C,OAAO,IAAI,CAACH,IAAI,CAACU,GAAG,CAAC,GAAG,IAAI,CAACT,OAAO,WAAWE,EAAE,EAAE,EAAEG,QAAQ,CAAC,CAAC,CAAE;EACnE;EAEA;EACAK,cAAcA,CAACC,UAAkB;IAC/B,OAAO,IAAI,CAACZ,IAAI,CAACa,MAAM,CAAC,GAAG,IAAI,CAACZ,OAAO,cAAcW,UAAU,EAAE,CAAC,CAAC,CAAE;EACvE;;;;uBA5BWd,eAAe,EAAAgB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;IAAA;EAAA;;;aAAfnB,eAAe;MAAAoB,OAAA,EAAfpB,eAAe,CAAAqB,IAAA;MAAAC,UAAA,EAFd;IAAM;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}