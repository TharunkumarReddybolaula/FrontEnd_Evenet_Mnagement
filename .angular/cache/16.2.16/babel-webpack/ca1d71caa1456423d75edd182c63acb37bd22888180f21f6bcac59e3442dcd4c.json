{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class ParticipantsService {\n  constructor(http) {\n    this.http = http;\n    this.baseUrl = 'http://localhost:5070/api/Participants';\n  }\n  register(participant) {\n    return this.http.post(`${this.baseUrl}/Register`, participant);\n  }\n  enroll(participantId, eventId) {\n    return this.http.post(`${this.baseUrl}/${participantId}/Enroll/${eventId}`, {});\n  }\n  update(id, participant) {\n    return this.http.put(`${this.baseUrl}/${id}`, participant);\n  }\n  submitFeedback(feedback) {\n    return this.http.post(`${this.baseUrl}/Feedback`, feedback);\n  }\n  static {\n    this.ɵfac = function ParticipantsService_Factory(t) {\n      return new (t || ParticipantsService)(i0.ɵɵinject(i1.HttpClient));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: ParticipantsService,\n      factory: ParticipantsService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["ParticipantsService","constructor","http","baseUrl","register","participant","post","enroll","participantId","eventId","update","id","put","submitFeedback","feedback","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\Users\\labuser\\source\\repos\\project\\auth\\src\\app\\participant.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\nexport interface Participant {\n  participantId?: number;\n  name: string;\n  email: string;\n  phone: string;\n  user?: {\n    userId?: number;\n    username: string;\n    password: string;\n  };\n}\n\nexport interface Feedback {\n  feedbackId?: number;\n  eventID: number;\n  speakerID: number;\n  feedback_remarks: string;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ParticipantsService {\n  private baseUrl = 'http://localhost:5070/api/Participants';\n\n  constructor(private http: HttpClient) {}\n\n  register(participant: Participant): Observable<any> {\n    return this.http.post(`${this.baseUrl}/Register`, participant);\n  }\n\n  enroll(participantId: number, eventId: number): Observable<any> {\n    return this.http.post(`${this.baseUrl}/${participantId}/Enroll/${eventId}`, {});\n  }\n\n  update(id: number, participant: Participant): Observable<any> {\n    return this.http.put(`${this.baseUrl}/${id}`, participant);\n  }\n\n  submitFeedback(feedback: Feedback): Observable<any> {\n    return this.http.post(`${this.baseUrl}/Feedback`, feedback);\n  }\n}\n"],"mappings":";;AA0BA,OAAM,MAAOA,mBAAmB;EAG9BC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFhB,KAAAC,OAAO,GAAG,wCAAwC;EAEnB;EAEvCC,QAAQA,CAACC,WAAwB;IAC/B,OAAO,IAAI,CAACH,IAAI,CAACI,IAAI,CAAC,GAAG,IAAI,CAACH,OAAO,WAAW,EAAEE,WAAW,CAAC;EAChE;EAEAE,MAAMA,CAACC,aAAqB,EAAEC,OAAe;IAC3C,OAAO,IAAI,CAACP,IAAI,CAACI,IAAI,CAAC,GAAG,IAAI,CAACH,OAAO,IAAIK,aAAa,WAAWC,OAAO,EAAE,EAAE,EAAE,CAAC;EACjF;EAEAC,MAAMA,CAACC,EAAU,EAAEN,WAAwB;IACzC,OAAO,IAAI,CAACH,IAAI,CAACU,GAAG,CAAC,GAAG,IAAI,CAACT,OAAO,IAAIQ,EAAE,EAAE,EAAEN,WAAW,CAAC;EAC5D;EAEAQ,cAAcA,CAACC,QAAkB;IAC/B,OAAO,IAAI,CAACZ,IAAI,CAACI,IAAI,CAAC,GAAG,IAAI,CAACH,OAAO,WAAW,EAAEW,QAAQ,CAAC;EAC7D;;;uBAnBWd,mBAAmB,EAAAe,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;IAAA;EAAA;;;aAAnBlB,mBAAmB;MAAAmB,OAAA,EAAnBnB,mBAAmB,CAAAoB,IAAA;MAAAC,UAAA,EAFlB;IAAM;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}