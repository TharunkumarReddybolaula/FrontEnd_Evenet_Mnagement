{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nexport let RegisterSpeakerComponent = class RegisterSpeakerComponent {\n  constructor(speakerService) {\n    this.speakerService = speakerService;\n    this.speaker = {\n      username: '',\n      password: '',\n      name: '',\n      email: '',\n      phone: '',\n      address: '',\n      keySkills: []\n    };\n    this.successMessage = '';\n    this.errorMessage = '';\n    this.loading = false;\n  }\n  onSubmit(form) {\n    if (form.invalid) return;\n    this.successMessage = '';\n    this.errorMessage = '';\n    this.loading = true;\n    if (typeof this.speaker.keySkills === 'string') {\n      this.speaker.keySkills = this.speaker.keySkills.split(',').map(skill => skill.trim());\n    }\n    this.speakerService.registerSpeaker(this.speaker).subscribe({\n      next: () => {\n        this.loading = false;\n        this.successMessage = '✅ Speaker registered successfully!';\n        this.speaker = {\n          username: '',\n          password: '',\n          name: '',\n          email: '',\n          phone: '',\n          address: '',\n          keySkills: []\n        };\n        form.resetForm();\n      },\n      error: err => {\n        this.loading = false;\n        this.errorMessage = err.error?.message || '❌ Failed to register speaker';\n      }\n    });\n  }\n};\nRegisterSpeakerComponent = __decorate([Component({\n  selector: 'app-register-speaker',\n  templateUrl: './register-speaker.component.html',\n  styleUrls: ['./register-speaker.component.css']\n})], RegisterSpeakerComponent);","map":{"version":3,"names":["Component","RegisterSpeakerComponent","constructor","speakerService","speaker","username","password","name","email","phone","address","keySkills","successMessage","errorMessage","loading","onSubmit","form","invalid","split","map","skill","trim","registerSpeaker","subscribe","next","resetForm","error","err","message","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\labuser\\source\\repos\\project\\auth\\src\\app\\register-speaker\\register-speaker.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { SpeakerService, SpeakerRegistration } from '../speaker.service';\n\n@Component({\n  selector: 'app-register-speaker',\n  templateUrl: './register-speaker.component.html',\n  styleUrls: ['./register-speaker.component.css']\n})\nexport class RegisterSpeakerComponent {\n  speaker: SpeakerRegistration = {\n    username: '',\n    password: '',\n    name: '',\n    email: '',\n    phone: '',\n    address: '',\n    keySkills: []\n  };\n\n  successMessage = '';\n  errorMessage = '';\n  loading = false;\n\n  constructor(private speakerService: SpeakerService) {}\n\n  onSubmit(form: any) {\n    if (form.invalid) return;\n\n    this.successMessage = '';\n    this.errorMessage = '';\n    this.loading = true;\n\n    if (typeof this.speaker.keySkills === 'string') {\n      this.speaker.keySkills = (this.speaker.keySkills as unknown as string)\n        .split(',')\n        .map(skill => skill.trim());\n    }\n\n    this.speakerService.registerSpeaker(this.speaker).subscribe({\n      next: () => {\n        this.loading = false;\n        this.successMessage = '✅ Speaker registered successfully!';\n        this.speaker = {\n          username: '',\n          password: '',\n          name: '',\n          email: '',\n          phone: '',\n          address: '',\n          keySkills: []\n        };\n        form.resetForm();\n      },\n      error: (err) => {\n        this.loading = false;\n        this.errorMessage = err.error?.message || '❌ Failed to register speaker';\n      }\n    });\n  }\n}\n"],"mappings":";AAAA,SAASA,SAAS,QAAQ,eAAe;AAQlC,WAAMC,wBAAwB,GAA9B,MAAMA,wBAAwB;EAenCC,YAAoBC,cAA8B;IAA9B,KAAAA,cAAc,GAAdA,cAAc;IAdlC,KAAAC,OAAO,GAAwB;MAC7BC,QAAQ,EAAE,EAAE;MACZC,QAAQ,EAAE,EAAE;MACZC,IAAI,EAAE,EAAE;MACRC,KAAK,EAAE,EAAE;MACTC,KAAK,EAAE,EAAE;MACTC,OAAO,EAAE,EAAE;MACXC,SAAS,EAAE;KACZ;IAED,KAAAC,cAAc,GAAG,EAAE;IACnB,KAAAC,YAAY,GAAG,EAAE;IACjB,KAAAC,OAAO,GAAG,KAAK;EAEsC;EAErDC,QAAQA,CAACC,IAAS;IAChB,IAAIA,IAAI,CAACC,OAAO,EAAE;IAElB,IAAI,CAACL,cAAc,GAAG,EAAE;IACxB,IAAI,CAACC,YAAY,GAAG,EAAE;IACtB,IAAI,CAACC,OAAO,GAAG,IAAI;IAEnB,IAAI,OAAO,IAAI,CAACV,OAAO,CAACO,SAAS,KAAK,QAAQ,EAAE;MAC9C,IAAI,CAACP,OAAO,CAACO,SAAS,GAAI,IAAI,CAACP,OAAO,CAACO,SAA+B,CACnEO,KAAK,CAAC,GAAG,CAAC,CACVC,GAAG,CAACC,KAAK,IAAIA,KAAK,CAACC,IAAI,EAAE,CAAC;;IAG/B,IAAI,CAAClB,cAAc,CAACmB,eAAe,CAAC,IAAI,CAAClB,OAAO,CAAC,CAACmB,SAAS,CAAC;MAC1DC,IAAI,EAAEA,CAAA,KAAK;QACT,IAAI,CAACV,OAAO,GAAG,KAAK;QACpB,IAAI,CAACF,cAAc,GAAG,oCAAoC;QAC1D,IAAI,CAACR,OAAO,GAAG;UACbC,QAAQ,EAAE,EAAE;UACZC,QAAQ,EAAE,EAAE;UACZC,IAAI,EAAE,EAAE;UACRC,KAAK,EAAE,EAAE;UACTC,KAAK,EAAE,EAAE;UACTC,OAAO,EAAE,EAAE;UACXC,SAAS,EAAE;SACZ;QACDK,IAAI,CAACS,SAAS,EAAE;MAClB,CAAC;MACDC,KAAK,EAAGC,GAAG,IAAI;QACb,IAAI,CAACb,OAAO,GAAG,KAAK;QACpB,IAAI,CAACD,YAAY,GAAGc,GAAG,CAACD,KAAK,EAAEE,OAAO,IAAI,8BAA8B;MAC1E;KACD,CAAC;EACJ;CACD;AAnDY3B,wBAAwB,GAAA4B,UAAA,EALpC7B,SAAS,CAAC;EACT8B,QAAQ,EAAE,sBAAsB;EAChCC,WAAW,EAAE,mCAAmC;EAChDC,SAAS,EAAE,CAAC,kCAAkC;CAC/C,CAAC,C,EACW/B,wBAAwB,CAmDpC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}